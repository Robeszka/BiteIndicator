

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Sun Nov 17 20:05:05 2013

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    19  0000                     _INTCON2bits	set	4081
    20  0000                     _INTCONbits	set	4082
    21  0000                     _OSCCONbits	set	4051
    22  0000                     _PORTD	set	3971
    23  0000                     _TRISD	set	3989
    24                           
    25 ;;
    26 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
    27 ;;
    28 ;; *************** function _main *****************
    29 ;; Defined at:
    30 ;;		line 27 in file "main.c"
    31 ;; Parameters:    Size  Location     Type
    32 ;;  argc            2   23[COMRAM] int 
    33 ;;  argv            3   25[COMRAM] PTR PTR unsigned char 
    34 ;; Auto vars:     Size  Location     Type
    35 ;;  startFreq       1   29[COMRAM] enum E4511
    36 ;; Return value:  Size  Location     Type
    37 ;;                  2   23[COMRAM] int 
    38 ;; Registers used:
    39 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
    40 ;; Tracked objects:
    41 ;;		On entry : 0/0
    42 ;;		On exit  : 0/0
    43 ;;		Unchanged: 0/0
    44 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
    45 ;;      Params:         5       0       0       0       0       0       0
    46 ;;      Locals:         1       0       0       0       0       0       0
    47 ;;      Temps:          1       0       0       0       0       0       0
    48 ;;      Totals:         7       0       0       0       0       0       0
    49 ;;Total ram usage:        7 bytes
    50 ;; Hardware stack levels required when called:    4
    51 ;; This function calls:
    52 ;;		_runHardverCheck
    53 ;;		_runHardverTest
    54 ;;		_initINT0
    55 ;;		_initLEDs
    56 ;;		_setOSCFrequency
    57 ;; This function is called by:
    58 ;;		Startup code after reset
    59 ;; This function uses a non-reentrant model
    60 ;;
    61                           
    62                           	psect	text0
    63  000298                     __ptext0:
    64                           	opt stack 0
    65                           
    66                           ; #config settings
    67  000298                     _main:
    68                           	opt stack 26
    69                           
    70                           ;main.c: 29: frequency startFreq = osc_frequency_2MHz;
    71                           
    72                           ;incstack = 0
    73                           ;incstack = 0
    74  000298  6E1D               	movwf	??_main& (0+255),c
    75  00029A  0E03               	movlw	3
    76  00029C  6E1E               	movwf	main@startFreq,c
    77  00029E  501D               	movf	??_main& (0+255),w,c
    78                           
    79                           ;main.c: 31: setOSCFrequency(startFreq);
    80  0002A0  C01E  F012         	movff	main@startFreq,?_setOSCFrequency
    81  0002A4  6A13               	clrf	?_setOSCFrequency+1,c
    82  0002A6  EC5F  F000         	call	_setOSCFrequency	;wreg free
    83                           
    84                           ;main.c: 33: freqGlobalInt = 0;
    85  0002AA  0E00               	movlw	0
    86  0002AC  6E20               	movwf	_freqGlobalInt+1,c
    87  0002AE  0E00               	movlw	0
    88  0002B0  6E1F               	movwf	_freqGlobalInt,c
    89                           
    90                           ;main.c: 35: initLEDs();
    91  0002B2  EC78  F001         	call	_initLEDs	;wreg free
    92                           
    93                           ;main.c: 37: initINT0();
    94  0002B6  EC7E  F001         	call	_initINT0	;wreg free
    95                           
    96                           ;main.c: 39: runHardverCheck();
    97  0002BA  ECE5  F000         	call	_runHardverCheck	;wreg free
    98  0002BE                     l751:
    99                           
   100                           ;main.c: 42: {
   101                           ;main.c: 44: runHardverTest();
   102  0002BE  EC20  F001         	call	_runHardverTest	;wreg free
   103  0002C2  D7FD               	goto	l751
   104  0002C4                     __end_of_main:
   105                           	opt stack 0
   106                           
   107                           	psect	cinit
   108  0002E2                     __pcinit:
   109                           	opt stack 0
   110  0002E2                     start_initialization:
   111                           	opt stack 0
   112  0002E2                     __initialization:
   113                           	opt stack 0
   114                           
   115                           ; Clear objects allocated to COMRAM (2 bytes)
   116  0002E2  6A20               	clrf	(__pbssCOMRAM+1)& (0+255),c
   117  0002E4  6A1F               	clrf	__pbssCOMRAM& (0+255),c
   118  0002E6                     end_of_initialization:
   119                           	opt stack 0
   120  0002E6                     __end_of__initialization:
   121                           	opt stack 0
   122  0002E6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   123  0002E8  6EF8               	movwf	tblptru,c
   124  0002EA  0100               	movlb	0
   125  0002EC  EF4C  F001         	goto	_main	;jump to C main() function
   126                           tblptru	equ	0xFF8
   127                           
   128                           	psect	bssCOMRAM
   129  00001F                     __pbssCOMRAM:
   130                           	opt stack 0
   131  00001F                     _freqGlobalInt:
   132                           	opt stack 0
   133  00001F                     	ds	2
   134                           tblptru	equ	0xFF8
   135                           
   136                           	psect	cstackCOMRAM
   137  000001                     __pcstackCOMRAM:
   138                           	opt stack 0
   139  000001                     ?i2_setOSCFrequency:
   140                           	opt stack 0
   141  000001                     i2setOSCFrequency@frequenc:
   142                           	opt stack 0
   143                           
   144                           ; 2 bytes @ 0x0
   145  000001                     	ds	2
   146  000003                     i2setOSCFrequency@ii:
   147                           	opt stack 0
   148                           
   149                           ; 1 bytes @ 0x2
   150  000003                     	ds	1
   151  000004                     ??_ISR:
   152                           
   153                           ; 0 bytes @ 0x3
   154  000004                     	ds	14
   155  000012                     ?_setOSCFrequency:
   156                           	opt stack 0
   157  000012                     delay@delay:
   158                           	opt stack 0
   159  000012                     setOSCFrequency@frequenc:
   160                           	opt stack 0
   161                           
   162                           ; 2 bytes @ 0x11
   163  000012                     	ds	2
   164  000014                     setOSCFrequency@ii:
   165                           	opt stack 0
   166  000014                     runHardverCheck@helper:
   167                           	opt stack 0
   168  000014                     runHardverTest@helper:
   169                           	opt stack 0
   170                           
   171                           ; 2 bytes @ 0x13
   172  000014                     	ds	2
   173  000016                     runHardverCheck@helper_29:
   174                           	opt stack 0
   175  000016                     runHardverTest@helper_32:
   176                           	opt stack 0
   177                           
   178                           ; 2 bytes @ 0x15
   179  000016                     	ds	2
   180  000018                     
   181                           ; 2 bytes @ 0x17
   182  000018                     	ds	2
   183  00001A                     
   184                           ; 3 bytes @ 0x19
   185  00001A                     	ds	3
   186  00001D                     ??_main:
   187                           
   188                           ; 0 bytes @ 0x1C
   189  00001D                     	ds	1
   190  00001E                     main@startFreq:
   191                           	opt stack 0
   192                           
   193                           ; 1 bytes @ 0x1D
   194  00001E                     	ds	1
   195                           tblptru	equ	0xFF8
   196                           
   197 ;; *************** function _setOSCFrequency *****************
   198 ;; Defined at:
   199 ;;		line 6 in file "OSC.c"
   200 ;; Parameters:    Size  Location     Type
   201 ;;  frequenc        2   17[COMRAM] int 
   202 ;; Auto vars:     Size  Location     Type
   203 ;;  ii              1   19[COMRAM] enum E4319
   204 ;; Return value:  Size  Location     Type
   205 ;;		None               void
   206 ;; Registers used:
   207 ;;		wreg, status,2, status,0
   208 ;; Tracked objects:
   209 ;;		On entry : 0/0
   210 ;;		On exit  : 0/0
   211 ;;		Unchanged: 0/0
   212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   213 ;;      Params:         2       0       0       0       0       0       0
   214 ;;      Locals:         1       0       0       0       0       0       0
   215 ;;      Temps:          0       0       0       0       0       0       0
   216 ;;      Totals:         3       0       0       0       0       0       0
   217 ;;Total ram usage:        3 bytes
   218 ;; Hardware stack levels used:    1
   219 ;; Hardware stack levels required when called:    2
   220 ;; This function calls:
   221 ;;		Nothing
   222 ;; This function is called by:
   223 ;;		_main
   224 ;; This function uses a non-reentrant model
   225 ;;
   226                           
   227                           	psect	text1
   228  0000BE                     __ptext1:
   229                           	opt stack 0
   230  0000BE                     _setOSCFrequency:
   231                           	opt stack 27
   232                           
   233                           ;OSC.c: 7: frequency ii = frequenc;
   234                           
   235                           ;incstack = 0
   236                           ;incstack = 0
   237  0000BE  C012  F014         	movff	setOSCFrequency@frequenc,setOSCFrequency@ii
   238                           
   239                           ;OSC.c: 9: switch(ii)
   240  0000C2  D026               	goto	l769
   241  0000C4                     l70:
   242                           
   243                           ;OSC.c: 12: {
   244                           ;OSC.c: 13: OSCCONbits.IRCF = 0b111;
   245  0000C4  88D3               	bsf	4051,4,c	;volatile
   246  0000C6  8AD3               	bsf	4051,5,c	;volatile
   247  0000C8  8CD3               	bsf	4051,6,c	;volatile
   248                           
   249                           ;OSC.c: 14: }break;
   250  0000CA  0012               	return	
   251  0000CC                     l755:
   252                           
   253                           ;OSC.c: 17: {
   254                           ;OSC.c: 18: OSCCONbits.IRCF = 0b110;
   255  0000CC  50D3               	movf	4051,w,c	;volatile
   256  0000CE  0B8F               	andlw	-113
   257  0000D0  0960               	iorlw	96
   258  0000D2  6ED3               	movwf	4051,c	;volatile
   259                           
   260                           ;OSC.c: 19: }break;
   261  0000D4  0012               	return	
   262  0000D6                     l757:
   263                           
   264                           ;OSC.c: 22: {
   265                           ;OSC.c: 23: OSCCONbits.IRCF = 0b101;
   266  0000D6  50D3               	movf	4051,w,c	;volatile
   267  0000D8  0B8F               	andlw	-113
   268  0000DA  0950               	iorlw	80
   269  0000DC  6ED3               	movwf	4051,c	;volatile
   270                           
   271                           ;OSC.c: 24: }break;
   272  0000DE  0012               	return	
   273  0000E0                     l759:
   274                           
   275                           ;OSC.c: 27: {
   276                           ;OSC.c: 28: OSCCONbits.IRCF = 0b100;
   277  0000E0  50D3               	movf	4051,w,c	;volatile
   278  0000E2  0B8F               	andlw	-113
   279  0000E4  0940               	iorlw	64
   280  0000E6  6ED3               	movwf	4051,c	;volatile
   281                           
   282                           ;OSC.c: 29: }break;
   283  0000E8  0012               	return	
   284  0000EA                     l761:
   285                           
   286                           ;OSC.c: 32: {
   287                           ;OSC.c: 33: OSCCONbits.IRCF = 0b011;
   288  0000EA  50D3               	movf	4051,w,c	;volatile
   289  0000EC  0B8F               	andlw	-113
   290  0000EE  0930               	iorlw	48
   291  0000F0  6ED3               	movwf	4051,c	;volatile
   292                           
   293                           ;OSC.c: 34: }break;
   294  0000F2  0012               	return	
   295  0000F4                     l763:
   296                           
   297                           ;OSC.c: 37: {
   298                           ;OSC.c: 38: OSCCONbits.IRCF = 0b010;
   299  0000F4  50D3               	movf	4051,w,c	;volatile
   300  0000F6  0B8F               	andlw	-113
   301  0000F8  0920               	iorlw	32
   302  0000FA  6ED3               	movwf	4051,c	;volatile
   303                           
   304                           ;OSC.c: 39: }break;
   305  0000FC  0012               	return	
   306  0000FE                     l765:
   307                           
   308                           ;OSC.c: 42: {
   309                           ;OSC.c: 43: OSCCONbits.IRCF = 0b001;
   310  0000FE  50D3               	movf	4051,w,c	;volatile
   311  000100  0B8F               	andlw	-113
   312  000102  0910               	iorlw	16
   313  000104  6ED3               	movwf	4051,c	;volatile
   314                           
   315                           ;OSC.c: 44: }break;
   316  000106  0012               	return	
   317  000108                     l78:
   318                           
   319                           ;OSC.c: 47: {
   320                           ;OSC.c: 48: OSCCONbits.IRCF = 0b000;
   321  000108  98D3               	bcf	4051,4,c	;volatile
   322  00010A  9AD3               	bcf	4051,5,c	;volatile
   323  00010C  9CD3               	bcf	4051,6,c	;volatile
   324                           
   325                           ;OSC.c: 49: }break;
   326  00010E  0012               	return	
   327  000110                     l769:
   328  000110  5014               	movf	setOSCFrequency@ii,w,c
   329                           
   330                           ; Switch size 1, requested type "space"
   331                           ; Number of cases is 8, Range of values is 0 to 7
   332                           ; switch strategies available:
   333                           ; Name         Instructions Cycles
   334                           ; simple_byte           25    13 (average)
   335                           ;	Chosen strategy is simple_byte
   336  000112  0A00               	xorlw	0	; case 0
   337  000114  B4D8               	btfsc	status,2,c
   338  000116  D7D6               	goto	l70
   339  000118  0A01               	xorlw	1	; case 1
   340  00011A  B4D8               	btfsc	status,2,c
   341  00011C  D7D7               	goto	l755
   342  00011E  0A03               	xorlw	3	; case 2
   343  000120  B4D8               	btfsc	status,2,c
   344  000122  D7D9               	goto	l757
   345  000124  0A01               	xorlw	1	; case 3
   346  000126  B4D8               	btfsc	status,2,c
   347  000128  D7DB               	goto	l759
   348  00012A  0A07               	xorlw	7	; case 4
   349  00012C  B4D8               	btfsc	status,2,c
   350  00012E  D7DD               	goto	l761
   351  000130  0A01               	xorlw	1	; case 5
   352  000132  B4D8               	btfsc	status,2,c
   353  000134  D7DF               	goto	l763
   354  000136  0A03               	xorlw	3	; case 6
   355  000138  B4D8               	btfsc	status,2,c
   356  00013A  D7E1               	goto	l765
   357  00013C  0A01               	xorlw	1	; case 7
   358  00013E  A4D8               	btfss	status,2,c
   359  000140  0012               	return	
   360  000142  D7E2               	goto	l78
   361  000144                     __end_of_setOSCFrequency:
   362                           	opt stack 0
   363                           tblptru	equ	0xFF8
   364                           status	equ	0xFD8
   365                           
   366 ;; *************** function _initLEDs *****************
   367 ;; Defined at:
   368 ;;		line 18 in file "Initialization.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;		None
   371 ;; Auto vars:     Size  Location     Type
   372 ;;		None
   373 ;; Return value:  Size  Location     Type
   374 ;;		None               void
   375 ;; Registers used:
   376 ;;		wreg, status,2, status,0
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   382 ;;      Params:         0       0       0       0       0       0       0
   383 ;;      Locals:         0       0       0       0       0       0       0
   384 ;;      Temps:          0       0       0       0       0       0       0
   385 ;;      Totals:         0       0       0       0       0       0       0
   386 ;;Total ram usage:        0 bytes
   387 ;; Hardware stack levels used:    1
   388 ;; Hardware stack levels required when called:    2
   389 ;; This function calls:
   390 ;;		Nothing
   391 ;; This function is called by:
   392 ;;		_main
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396                           	psect	text2
   397  0002F0                     __ptext2:
   398                           	opt stack 0
   399  0002F0                     _initLEDs:
   400                           	opt stack 27
   401                           
   402                           ;Initialization.c: 19: TRISD = TRISD & 0b11111000;
   403                           
   404                           ;incstack = 0
   405                           ;incstack = 0
   406  0002F0  5095               	movf	3989,w,c	;volatile
   407  0002F2  0BF8               	andlw	248
   408  0002F4  6E95               	movwf	3989,c	;volatile
   409                           
   410                           ;Initialization.c: 20: PORTD = 0b00000000;
   411  0002F6  0E00               	movlw	0
   412  0002F8  6E83               	movwf	3971,c	;volatile
   413  0002FA  0012               	return	
   414  0002FC                     __end_of_initLEDs:
   415                           	opt stack 0
   416                           tblptru	equ	0xFF8
   417                           status	equ	0xFD8
   418                           
   419 ;; *************** function _initINT0 *****************
   420 ;; Defined at:
   421 ;;		line 9 in file "Initialization.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;		None
   424 ;; Auto vars:     Size  Location     Type
   425 ;;		None
   426 ;; Return value:  Size  Location     Type
   427 ;;		None               void
   428 ;; Registers used:
   429 ;;		None
   430 ;; Tracked objects:
   431 ;;		On entry : 0/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   435 ;;      Params:         0       0       0       0       0       0       0
   436 ;;      Locals:         0       0       0       0       0       0       0
   437 ;;      Temps:          0       0       0       0       0       0       0
   438 ;;      Totals:         0       0       0       0       0       0       0
   439 ;;Total ram usage:        0 bytes
   440 ;; Hardware stack levels used:    1
   441 ;; Hardware stack levels required when called:    2
   442 ;; This function calls:
   443 ;;		Nothing
   444 ;; This function is called by:
   445 ;;		_main
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449                           	psect	text3
   450  0002FC                     __ptext3:
   451                           	opt stack 0
   452  0002FC                     _initINT0:
   453                           	opt stack 27
   454                           
   455                           ;Initialization.c: 10: INTCON2bits.RBPU = 0;
   456                           
   457                           ;incstack = 0
   458                           ;incstack = 0
   459  0002FC  9EF1               	bcf	intcon2,7,c	;volatile
   460                           
   461                           ;Initialization.c: 11: INTCONbits.INT0IE = 1;
   462  0002FE  88F2               	bsf	intcon,4,c	;volatile
   463                           
   464                           ;Initialization.c: 12: INTCON2bits.INTEDG0 = 0;
   465  000300  9CF1               	bcf	intcon2,6,c	;volatile
   466                           
   467                           ;Initialization.c: 13: INTCONbits.GIE = 1;
   468  000302  8EF2               	bsf	intcon,7,c	;volatile
   469                           
   470                           ;Initialization.c: 14: INTCONbits.INT0IF = 0;
   471  000304  92F2               	bcf	intcon,1,c	;volatile
   472  000306  0012               	return	
   473  000308                     __end_of_initINT0:
   474                           	opt stack 0
   475                           tblptru	equ	0xFF8
   476                           intcon	equ	0xFF2
   477                           intcon2	equ	0xFF1
   478                           status	equ	0xFD8
   479                           
   480 ;; *************** function _runHardverTest *****************
   481 ;; Defined at:
   482 ;;		line 44 in file "HardverTest.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;		None
   485 ;; Auto vars:     Size  Location     Type
   486 ;;  helper          2   21[COMRAM] int 
   487 ;;  helper          2   19[COMRAM] int 
   488 ;; Return value:  Size  Location     Type
   489 ;;		None               void
   490 ;; Registers used:
   491 ;;		wreg, status,2, status,0, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   497 ;;      Params:         0       0       0       0       0       0       0
   498 ;;      Locals:         4       0       0       0       0       0       0
   499 ;;      Temps:          0       0       0       0       0       0       0
   500 ;;      Totals:         4       0       0       0       0       0       0
   501 ;;Total ram usage:        4 bytes
   502 ;; Hardware stack levels used:    1
   503 ;; Hardware stack levels required when called:    3
   504 ;; This function calls:
   505 ;;		_delay
   506 ;; This function is called by:
   507 ;;		_main
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           	psect	text4
   512  000240                     __ptext4:
   513                           	opt stack 0
   514  000240                     _runHardverTest:
   515                           	opt stack 26
   516                           
   517                           ;HardverTest.c: 45: TRISD = TRISD & 0b00000000;
   518                           
   519                           ;incstack = 0
   520                           ;incstack = 0
   521  000240  0E00               	movlw	0
   522  000242  6E95               	movwf	3989,c	;volatile
   523                           
   524                           ;HardverTest.c: 47: PORTD = 1;
   525  000244  0E01               	movlw	1
   526  000246  6E83               	movwf	3971,c	;volatile
   527                           
   528                           ;HardverTest.c: 49: for(int helper = 0; helper <= 6; helper++)
   529  000248  0E00               	movlw	0
   530  00024A  6E15               	movwf	runHardverTest@helper+1,c
   531  00024C  0E00               	movlw	0
   532  00024E  6E14               	movwf	runHardverTest@helper,c
   533  000250  5015               	movf	runHardverTest@helper+1,w,c
   534  000252  0A80               	xorlw	128
   535  000254  0F80               	addlw	-128
   536  000256  0E07               	movlw	7
   537  000258  B4D8               	btfsc	status,2,c
   538  00025A  5C14               	subwf	runHardverTest@helper,w,c
   539  00025C  B0D8               	btfsc	status,0,c
   540  00025E  D008               	goto	l719
   541                           
   542                           ;HardverTest.c: 50: {
   543                           ;HardverTest.c: 51: delay();
   544  000260  EC62  F001         	call	_delay	;wreg free
   545                           
   546                           ;HardverTest.c: 53: PORTD = PORTD << 1;
   547  000264  5083               	movf	3971,w,c	;volatile
   548  000266  2483               	addwf	3971,w,c	;volatile
   549  000268  6E83               	movwf	3971,c	;volatile
   550  00026A  4A14               	infsnz	runHardverTest@helper,f,c
   551  00026C  2A15               	incf	runHardverTest@helper+1,f,c
   552  00026E  D7F0               	goto	L1
   553  000270                     l719:
   554                           
   555                           ;HardverTest.c: 55: }
   556                           ;HardverTest.c: 57: for(int helper = 0; helper <= 6; helper++)
   557  000270  0E00               	movlw	0
   558  000272  6E17               	movwf	runHardverTest@helper_32+1,c
   559  000274  0E00               	movlw	0
   560  000276  6E16               	movwf	runHardverTest@helper_32,c
   561  000278  5017               	movf	runHardverTest@helper_32+1,w,c
   562  00027A  0A80               	xorlw	128
   563  00027C  0F80               	addlw	-128
   564  00027E  0E07               	movlw	7
   565  000280  B4D8               	btfsc	status,2,c
   566  000282  5C16               	subwf	runHardverTest@helper_32,w,c
   567  000284  B0D8               	btfsc	status,0,c
   568  000286  0012               	return	
   569                           
   570                           ;HardverTest.c: 58: {
   571                           ;HardverTest.c: 59: delay();
   572  000288  EC62  F001         	call	_delay	;wreg free
   573                           
   574                           ;HardverTest.c: 61: PORTD = PORTD >> 1;
   575  00028C  90D8               	bcf	status,0,c
   576  00028E  3083               	rrcf	3971,w,c	;volatile
   577  000290  6E83               	movwf	3971,c	;volatile
   578  000292  4A16               	infsnz	runHardverTest@helper_32,f,c
   579  000294  2A17               	incf	runHardverTest@helper_32+1,f,c
   580  000296  D7F0               	goto	L2
   581  000298                     __end_of_runHardverTest:
   582                           	opt stack 0
   583                           tblptru	equ	0xFF8
   584                           intcon	equ	0xFF2
   585                           intcon2	equ	0xFF1
   586                           status	equ	0xFD8
   587                           
   588 ;; *************** function _runHardverCheck *****************
   589 ;; Defined at:
   590 ;;		line 9 in file "HardverTest.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;		None
   593 ;; Auto vars:     Size  Location     Type
   594 ;;  helper          2   21[COMRAM] int 
   595 ;;  helper          2   19[COMRAM] int 
   596 ;; Return value:  Size  Location     Type
   597 ;;		None               void
   598 ;; Registers used:
   599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   600 ;; Tracked objects:
   601 ;;		On entry : 0/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   605 ;;      Params:         0       0       0       0       0       0       0
   606 ;;      Locals:         4       0       0       0       0       0       0
   607 ;;      Temps:          0       0       0       0       0       0       0
   608 ;;      Totals:         4       0       0       0       0       0       0
   609 ;;Total ram usage:        4 bytes
   610 ;; Hardware stack levels used:    1
   611 ;; Hardware stack levels required when called:    3
   612 ;; This function calls:
   613 ;;		_delay
   614 ;; This function is called by:
   615 ;;		_main
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619                           	psect	text5
   620  0001CA                     __ptext5:
   621                           	opt stack 0
   622  0001CA                     _runHardverCheck:
   623                           	opt stack 26
   624                           
   625                           ;HardverTest.c: 10: PORTD = 0b00000001;
   626                           
   627                           ;incstack = 0
   628                           ;incstack = 0
   629  0001CA  0E01               	movlw	1
   630  0001CC  6E83               	movwf	3971,c	;volatile
   631                           
   632                           ;HardverTest.c: 12: for(int helper = 0; helper <= 1 ; helper++)
   633  0001CE  0E00               	movlw	0
   634  0001D0  6E15               	movwf	runHardverCheck@helper+1,c
   635  0001D2  0E00               	movlw	0
   636  0001D4  6E14               	movwf	runHardverCheck@helper,c
   637  0001D6  5015               	movf	runHardverCheck@helper+1,w,c
   638  0001D8  0A80               	xorlw	128
   639  0001DA  0F80               	addlw	-128
   640  0001DC  0E02               	movlw	2
   641  0001DE  B4D8               	btfsc	status,2,c
   642  0001E0  5C14               	subwf	runHardverCheck@helper,w,c
   643  0001E2  B0D8               	btfsc	status,0,c
   644  0001E4  D008               	goto	l669
   645                           
   646                           ;HardverTest.c: 13: {
   647                           ;HardverTest.c: 14: delay();
   648  0001E6  EC62  F001         	call	_delay	;wreg free
   649                           
   650                           ;HardverTest.c: 16: PORTD = PORTD << 1;
   651  0001EA  5083               	movf	3971,w,c	;volatile
   652  0001EC  2483               	addwf	3971,w,c	;volatile
   653  0001EE  6E83               	movwf	3971,c	;volatile
   654  0001F0  4A14               	infsnz	runHardverCheck@helper,f,c
   655  0001F2  2A15               	incf	runHardverCheck@helper+1,f,c
   656  0001F4  D7F0               	goto	L3
   657  0001F6                     l669:
   658                           
   659                           ;HardverTest.c: 17: }
   660                           ;HardverTest.c: 19: for(int helper = 0; helper <= 1 ; helper++)
   661  0001F6  0E00               	movlw	0
   662  0001F8  6E17               	movwf	runHardverCheck@helper_29+1,c
   663  0001FA  0E00               	movlw	0
   664  0001FC  6E16               	movwf	runHardverCheck@helper_29,c
   665  0001FE  5017               	movf	runHardverCheck@helper_29+1,w,c
   666  000200  0A80               	xorlw	128
   667  000202  0F80               	addlw	-128
   668  000204  0E02               	movlw	2
   669  000206  B4D8               	btfsc	status,2,c
   670  000208  5C16               	subwf	runHardverCheck@helper_29,w,c
   671  00020A  B0D8               	btfsc	status,0,c
   672  00020C  D008               	goto	l683
   673                           
   674                           ;HardverTest.c: 20: {
   675                           ;HardverTest.c: 21: delay();
   676  00020E  EC62  F001         	call	_delay	;wreg free
   677                           
   678                           ;HardverTest.c: 23: PORTD = PORTD >> 1;
   679  000212  90D8               	bcf	status,0,c
   680  000214  3083               	rrcf	3971,w,c	;volatile
   681  000216  6E83               	movwf	3971,c	;volatile
   682  000218  4A16               	infsnz	runHardverCheck@helper_29,f,c
   683  00021A  2A17               	incf	runHardverCheck@helper_29+1,f,c
   684  00021C  D7F0               	goto	L4
   685  00021E                     l683:
   686                           
   687                           ;HardverTest.c: 24: }
   688                           ;HardverTest.c: 26: delay();
   689  00021E  EC62  F001         	call	_delay	;wreg free
   690                           
   691                           ;HardverTest.c: 28: PORTD = 0b101;
   692  000222  0E05               	movlw	5
   693  000224  6E83               	movwf	3971,c	;volatile
   694                           
   695                           ;HardverTest.c: 30: delay();
   696  000226  EC62  F001         	call	_delay	;wreg free
   697                           
   698                           ;HardverTest.c: 32: PORTD = 0b010;
   699  00022A  0E02               	movlw	2
   700  00022C  6E83               	movwf	3971,c	;volatile
   701                           
   702                           ;HardverTest.c: 34: delay();
   703  00022E  EC62  F001         	call	_delay	;wreg free
   704                           
   705                           ;HardverTest.c: 36: PORTD = 0b101;
   706  000232  0E05               	movlw	5
   707  000234  6E83               	movwf	3971,c	;volatile
   708                           
   709                           ;HardverTest.c: 38: delay();
   710  000236  EC62  F001         	call	_delay	;wreg free
   711                           
   712                           ;HardverTest.c: 40: PORTD = 0;
   713  00023A  0E00               	movlw	0
   714  00023C  6E83               	movwf	3971,c	;volatile
   715  00023E  0012               	return	
   716  000240                     __end_of_runHardverCheck:
   717                           	opt stack 0
   718                           tblptru	equ	0xFF8
   719                           intcon	equ	0xFF2
   720                           intcon2	equ	0xFF1
   721                           status	equ	0xFD8
   722                           
   723 ;; *************** function _delay *****************
   724 ;; Defined at:
   725 ;;		line 67 in file "HardverTest.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;		None
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  delay           2   17[COMRAM] int 
   730 ;; Return value:  Size  Location     Type
   731 ;;		None               void
   732 ;; Registers used:
   733 ;;		wreg, status,2, status,0
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   739 ;;      Params:         0       0       0       0       0       0       0
   740 ;;      Locals:         2       0       0       0       0       0       0
   741 ;;      Temps:          0       0       0       0       0       0       0
   742 ;;      Totals:         2       0       0       0       0       0       0
   743 ;;Total ram usage:        2 bytes
   744 ;; Hardware stack levels used:    1
   745 ;; Hardware stack levels required when called:    2
   746 ;; This function calls:
   747 ;;		Nothing
   748 ;; This function is called by:
   749 ;;		_runHardverCheck
   750 ;;		_runHardverTest
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           	psect	text6
   755  0002C4                     __ptext6:
   756                           	opt stack 0
   757  0002C4                     _delay:
   758                           	opt stack 26
   759                           
   760                           ;HardverTest.c: 68: for(int delay = 0; delay <= 5000; delay++)
   761                           
   762                           ;incstack = 0
   763                           ;incstack = 0
   764  0002C4  0E00               	movlw	0
   765  0002C6  6E13               	movwf	delay@delay+1,c
   766  0002C8  0E00               	movlw	0
   767  0002CA  6E12               	movwf	delay@delay,c
   768  0002CC  5013               	movf	delay@delay+1,w,c
   769  0002CE  0A80               	xorlw	128
   770  0002D0  0F6D               	addlw	-147
   771  0002D2  0E89               	movlw	137
   772  0002D4  B4D8               	btfsc	status,2,c
   773  0002D6  5C12               	subwf	delay@delay,w,c
   774  0002D8  B0D8               	btfsc	status,0,c
   775  0002DA  0012               	return	
   776                           
   777                           ;HardverTest.c: 69: {}
   778  0002DC  4A12               	infsnz	delay@delay,f,c
   779  0002DE  2A13               	incf	delay@delay+1,f,c
   780  0002E0  D7F5               	goto	L5
   781  0002E2                     __end_of_delay:
   782                           	opt stack 0
   783                           tblptru	equ	0xFF8
   784                           intcon	equ	0xFF2
   785                           intcon2	equ	0xFF1
   786                           status	equ	0xFD8
   787                           
   788 ;; *************** function _ISR *****************
   789 ;; Defined at:
   790 ;;		line 52 in file "main.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;		None
   793 ;; Auto vars:     Size  Location     Type
   794 ;;		None
   795 ;; Return value:  Size  Location     Type
   796 ;;		None               void
   797 ;; Registers used:
   798 ;;		wreg, status,2, status,0, cstack
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   804 ;;      Params:         0       0       0       0       0       0       0
   805 ;;      Locals:         0       0       0       0       0       0       0
   806 ;;      Temps:         14       0       0       0       0       0       0
   807 ;;      Totals:        14       0       0       0       0       0       0
   808 ;;Total ram usage:       14 bytes
   809 ;; Hardware stack levels used:    1
   810 ;; Hardware stack levels required when called:    1
   811 ;; This function calls:
   812 ;;		i2_setOSCFrequency
   813 ;; This function is called by:
   814 ;;		Interrupt level 2
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           	psect	intcode
   819  000008                     __pintcode:
   820                           	opt stack 0
   821  000008                     _ISR:
   822                           	opt stack 26
   823                           
   824                           ;incstack = 0
   825  000008  CFFA F004          	movff	pclath,??_ISR
   826  00000C  CFFB F005          	movff	pclatu,??_ISR+1
   827  000010  CFE9 F006          	movff	fsr0l,??_ISR+2
   828  000014  CFEA F007          	movff	fsr0h,??_ISR+3
   829  000018  CFE1 F008          	movff	fsr1l,??_ISR+4
   830  00001C  CFE2 F009          	movff	fsr1h,??_ISR+5
   831  000020  CFD9 F00A          	movff	fsr2l,??_ISR+6
   832  000024  CFDA F00B          	movff	fsr2h,??_ISR+7
   833  000028  CFF3 F00C          	movff	prodl,??_ISR+8
   834  00002C  CFF4 F00D          	movff	prodh,??_ISR+9
   835  000030  CFF6 F00E          	movff	tblptrl,??_ISR+10
   836  000034  CFF7 F00F          	movff	tblptrh,??_ISR+11
   837  000038  CFF8 F010          	movff	tblptru,??_ISR+12
   838  00003C  CFF5 F011          	movff	tablat,??_ISR+13
   839  000040                     
   840                           ;main.c: 53: INTCONbits.GIE = 0;
   841  000040  9EF2               	bcf	intcon,7,c	;volatile
   842                           
   843                           ;main.c: 55: if(INTCONbits.INT0IE && INTCONbits.INT0IF)
   844  000042  A8F2               	btfss	intcon,4,c	;volatile
   845  000044  D001               	goto	i2u11_41
   846  000046  D001               	goto	i2u11_40
   847  000048                     i2u11_41:
   848  000048  D01B               	goto	i2l64
   849  00004A                     i2u11_40:
   850  00004A  A2F2               	btfss	intcon,1,c	;volatile
   851  00004C  D001               	goto	i2u12_41
   852  00004E  D001               	goto	i2u12_40
   853  000050                     i2u12_41:
   854  000050  D017               	goto	i2l64
   855  000052                     i2u12_40:
   856  000052                     
   857                           ;main.c: 56: {
   858                           ;main.c: 57: if(freqGlobalInt == 5)
   859  000052  501F               	movf	_freqGlobalInt,w,c
   860  000054  0A05               	xorlw	5
   861  000056  1020               	iorwf	_freqGlobalInt+1,w,c
   862  000058  A4D8               	btfss	status,2,c
   863  00005A  D001               	goto	i2u13_41
   864  00005C  D001               	goto	i2u13_40
   865  00005E                     i2u13_41:
   866  00005E  D005               	goto	i2l815
   867  000060                     i2u13_40:
   868  000060                     
   869                           ;main.c: 58: {
   870                           ;main.c: 59: freqGlobalInt = 0;
   871  000060  0E00               	movlw	0
   872  000062  6E20               	movwf	_freqGlobalInt+1,c
   873  000064  0E00               	movlw	0
   874  000066  6E1F               	movwf	_freqGlobalInt,c
   875  000068  D000               	goto	i2l815
   876  00006A                     i2l815:
   877                           
   878                           ;main.c: 60: }
   879                           ;main.c: 62: setOSCFrequency (freqGlobalInt);
   880  00006A  C01F  F001         	movff	_freqGlobalInt,?i2_setOSCFrequency
   881  00006E  C020  F002         	movff	_freqGlobalInt+1,?i2_setOSCFrequency+1
   882  000072  ECA2  F000         	call	i2_setOSCFrequency	;wreg free
   883  000076                     
   884                           ;main.c: 65: freqGlobalInt++;
   885  000076  4A1F               	infsnz	_freqGlobalInt,f,c
   886  000078  2A20               	incf	_freqGlobalInt+1,f,c
   887  00007A                     
   888                           ;main.c: 67: INTCONbits.INT0IF = 0;
   889  00007A  92F2               	bcf	intcon,1,c	;volatile
   890  00007C                     
   891                           ;main.c: 69: INTCONbits.GIE = 1;
   892  00007C  8EF2               	bsf	intcon,7,c	;volatile
   893  00007E  D000               	goto	i2l64
   894  000080                     i2l64:
   895  000080  C011  FFF5         	movff	??_ISR+13,tablat
   896  000084  C010  FFF8         	movff	??_ISR+12,tblptru
   897  000088  C00F  FFF7         	movff	??_ISR+11,tblptrh
   898  00008C  C00E  FFF6         	movff	??_ISR+10,tblptrl
   899  000090  C00D  FFF4         	movff	??_ISR+9,prodh
   900  000094  C00C  FFF3         	movff	??_ISR+8,prodl
   901  000098  C00B  FFDA         	movff	??_ISR+7,fsr2h
   902  00009C  C00A  FFD9         	movff	??_ISR+6,fsr2l
   903  0000A0  C009  FFE2         	movff	??_ISR+5,fsr1h
   904  0000A4  C008  FFE1         	movff	??_ISR+4,fsr1l
   905  0000A8  C007  FFEA         	movff	??_ISR+3,fsr0h
   906  0000AC  C006  FFE9         	movff	??_ISR+2,fsr0l
   907  0000B0  C005  FFFB         	movff	??_ISR+1,pclatu
   908  0000B4  C004  FFFA         	movff	??_ISR,pclath
   909  0000B8  0011               	retfie		f
   910  0000BA                     __end_of_ISR:
   911                           	opt stack 0
   912                           pclatu	equ	0xFFB
   913                           pclath	equ	0xFFA
   914                           tblptru	equ	0xFF8
   915                           tblptrh	equ	0xFF7
   916                           tblptrl	equ	0xFF6
   917                           tablat	equ	0xFF5
   918                           prodh	equ	0xFF4
   919                           prodl	equ	0xFF3
   920                           intcon	equ	0xFF2
   921                           intcon2	equ	0xFF1
   922                           fsr0h	equ	0xFEA
   923                           fsr0l	equ	0xFE9
   924                           fsr1h	equ	0xFE2
   925                           fsr1l	equ	0xFE1
   926                           fsr2h	equ	0xFDA
   927                           fsr2l	equ	0xFD9
   928                           status	equ	0xFD8
   929                           
   930 ;; *************** function i2_setOSCFrequency *****************
   931 ;; Defined at:
   932 ;;		line 6 in file "OSC.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;  frequenc        2    0[COMRAM] int 
   935 ;; Auto vars:     Size  Location     Type
   936 ;;  setOSCFreque    1    2[COMRAM] enum E4319
   937 ;; Return value:  Size  Location     Type
   938 ;;		None               void
   939 ;; Registers used:
   940 ;;		wreg, status,2, status,0
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   946 ;;      Params:         2       0       0       0       0       0       0
   947 ;;      Locals:         1       0       0       0       0       0       0
   948 ;;      Temps:          0       0       0       0       0       0       0
   949 ;;      Totals:         3       0       0       0       0       0       0
   950 ;;Total ram usage:        3 bytes
   951 ;; Hardware stack levels used:    1
   952 ;; This function calls:
   953 ;;		Nothing
   954 ;; This function is called by:
   955 ;;		_ISR
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           	psect	text8
   960  000144                     __ptext8:
   961                           	opt stack 0
   962  000144                     i2_setOSCFrequency:
   963                           	opt stack 26
   964                           
   965                           ;OSC.c: 7: frequency ii = frequenc;
   966                           
   967                           ;incstack = 0
   968                           ;incstack = 0
   969  000144  C001  F003         	movff	i2setOSCFrequency@frequenc,i2setOSCFrequency@ii
   970                           
   971                           ;OSC.c: 9: switch(ii)
   972  000148  D026               	goto	i2l805
   973  00014A                     i2l70:
   974                           
   975                           ;OSC.c: 12: {
   976                           ;OSC.c: 13: OSCCONbits.IRCF = 0b111;
   977  00014A  88D3               	bsf	4051,4,c	;volatile
   978  00014C  8AD3               	bsf	4051,5,c	;volatile
   979  00014E  8CD3               	bsf	4051,6,c	;volatile
   980                           
   981                           ;OSC.c: 14: }break;
   982  000150  0012               	return	
   983  000152                     i2l791:
   984                           
   985                           ;OSC.c: 17: {
   986                           ;OSC.c: 18: OSCCONbits.IRCF = 0b110;
   987  000152  50D3               	movf	4051,w,c	;volatile
   988  000154  0B8F               	andlw	-113
   989  000156  0960               	iorlw	96
   990  000158  6ED3               	movwf	4051,c	;volatile
   991                           
   992                           ;OSC.c: 19: }break;
   993  00015A  0012               	return	
   994  00015C                     i2l793:
   995                           
   996                           ;OSC.c: 22: {
   997                           ;OSC.c: 23: OSCCONbits.IRCF = 0b101;
   998  00015C  50D3               	movf	4051,w,c	;volatile
   999  00015E  0B8F               	andlw	-113
  1000  000160  0950               	iorlw	80
  1001  000162  6ED3               	movwf	4051,c	;volatile
  1002                           
  1003                           ;OSC.c: 24: }break;
  1004  000164  0012               	return	
  1005  000166                     i2l795:
  1006                           
  1007                           ;OSC.c: 27: {
  1008                           ;OSC.c: 28: OSCCONbits.IRCF = 0b100;
  1009  000166  50D3               	movf	4051,w,c	;volatile
  1010  000168  0B8F               	andlw	-113
  1011  00016A  0940               	iorlw	64
  1012  00016C  6ED3               	movwf	4051,c	;volatile
  1013                           
  1014                           ;OSC.c: 29: }break;
  1015  00016E  0012               	return	
  1016  000170                     i2l797:
  1017                           
  1018                           ;OSC.c: 32: {
  1019                           ;OSC.c: 33: OSCCONbits.IRCF = 0b011;
  1020  000170  50D3               	movf	4051,w,c	;volatile
  1021  000172  0B8F               	andlw	-113
  1022  000174  0930               	iorlw	48
  1023  000176  6ED3               	movwf	4051,c	;volatile
  1024                           
  1025                           ;OSC.c: 34: }break;
  1026  000178  0012               	return	
  1027  00017A                     i2l799:
  1028                           
  1029                           ;OSC.c: 37: {
  1030                           ;OSC.c: 38: OSCCONbits.IRCF = 0b010;
  1031  00017A  50D3               	movf	4051,w,c	;volatile
  1032  00017C  0B8F               	andlw	-113
  1033  00017E  0920               	iorlw	32
  1034  000180  6ED3               	movwf	4051,c	;volatile
  1035                           
  1036                           ;OSC.c: 39: }break;
  1037  000182  0012               	return	
  1038  000184                     i2l801:
  1039                           
  1040                           ;OSC.c: 42: {
  1041                           ;OSC.c: 43: OSCCONbits.IRCF = 0b001;
  1042  000184  50D3               	movf	4051,w,c	;volatile
  1043  000186  0B8F               	andlw	-113
  1044  000188  0910               	iorlw	16
  1045  00018A  6ED3               	movwf	4051,c	;volatile
  1046                           
  1047                           ;OSC.c: 44: }break;
  1048  00018C  0012               	return	
  1049  00018E                     i2l78:
  1050                           
  1051                           ;OSC.c: 47: {
  1052                           ;OSC.c: 48: OSCCONbits.IRCF = 0b000;
  1053  00018E  98D3               	bcf	4051,4,c	;volatile
  1054  000190  9AD3               	bcf	4051,5,c	;volatile
  1055  000192  9CD3               	bcf	4051,6,c	;volatile
  1056                           
  1057                           ;OSC.c: 49: }break;
  1058  000194  0012               	return	
  1059  000196                     i2l805:
  1060  000196  5003               	movf	i2setOSCFrequency@ii,w,c
  1061                           
  1062                           ; Switch size 1, requested type "space"
  1063                           ; Number of cases is 8, Range of values is 0 to 7
  1064                           ; switch strategies available:
  1065                           ; Name         Instructions Cycles
  1066                           ; simple_byte           25    13 (average)
  1067                           ;	Chosen strategy is simple_byte
  1068  000198  0A00               	xorlw	0	; case 0
  1069  00019A  B4D8               	btfsc	status,2,c
  1070  00019C  D7D6               	goto	i2l70
  1071  00019E  0A01               	xorlw	1	; case 1
  1072  0001A0  B4D8               	btfsc	status,2,c
  1073  0001A2  D7D7               	goto	i2l791
  1074  0001A4  0A03               	xorlw	3	; case 2
  1075  0001A6  B4D8               	btfsc	status,2,c
  1076  0001A8  D7D9               	goto	i2l793
  1077  0001AA  0A01               	xorlw	1	; case 3
  1078  0001AC  B4D8               	btfsc	status,2,c
  1079  0001AE  D7DB               	goto	i2l795
  1080  0001B0  0A07               	xorlw	7	; case 4
  1081  0001B2  B4D8               	btfsc	status,2,c
  1082  0001B4  D7DD               	goto	i2l797
  1083  0001B6  0A01               	xorlw	1	; case 5
  1084  0001B8  B4D8               	btfsc	status,2,c
  1085  0001BA  D7DF               	goto	i2l799
  1086  0001BC  0A03               	xorlw	3	; case 6
  1087  0001BE  B4D8               	btfsc	status,2,c
  1088  0001C0  D7E1               	goto	i2l801
  1089  0001C2  0A01               	xorlw	1	; case 7
  1090  0001C4  A4D8               	btfss	status,2,c
  1091  0001C6  0012               	return	
  1092  0001C8  D7E2               	goto	i2l78
  1093  0001CA                     __end_ofi2_setOSCFrequency:
  1094                           	opt stack 0
  1095  0000                     pclatu	equ	0xFFB
  1096                           pclath	equ	0xFFA
  1097                           tblptru	equ	0xFF8
  1098                           tblptrh	equ	0xFF7
  1099                           tblptrl	equ	0xFF6
  1100                           tablat	equ	0xFF5
  1101                           prodh	equ	0xFF4
  1102                           prodl	equ	0xFF3
  1103                           intcon	equ	0xFF2
  1104                           intcon2	equ	0xFF1
  1105                           fsr0h	equ	0xFEA
  1106                           fsr0l	equ	0xFE9
  1107                           fsr1h	equ	0xFE2
  1108                           fsr1l	equ	0xFE1
  1109                           fsr2h	equ	0xFDA
  1110                           fsr2l	equ	0xFD9
  1111                           status	equ	0xFD8
  1112                           pclatu	equ	0xFFB
  1113                           pclath	equ	0xFFA
  1114                           tblptru	equ	0xFF8
  1115                           tblptrh	equ	0xFF7
  1116                           tblptrl	equ	0xFF6
  1117                           tablat	equ	0xFF5
  1118                           prodh	equ	0xFF4
  1119                           prodl	equ	0xFF3
  1120                           intcon	equ	0xFF2
  1121                           intcon2	equ	0xFF1
  1122                           fsr0h	equ	0xFEA
  1123                           fsr0l	equ	0xFE9
  1124                           fsr1h	equ	0xFE2
  1125                           fsr1l	equ	0xFE1
  1126                           fsr2h	equ	0xFDA
  1127                           fsr2l	equ	0xFD9
  1128                           status	equ	0xFD8
  1129                           
  1130                           	psect	rparam
  1131  0000                     pclatu	equ	0xFFB
  1132                           pclath	equ	0xFFA
  1133                           tblptru	equ	0xFF8
  1134                           tblptrh	equ	0xFF7
  1135                           tblptrl	equ	0xFF6
  1136                           tablat	equ	0xFF5
  1137                           prodh	equ	0xFF4
  1138                           prodl	equ	0xFF3
  1139                           intcon	equ	0xFF2
  1140                           intcon2	equ	0xFF1
  1141                           fsr0h	equ	0xFEA
  1142                           fsr0l	equ	0xFE9
  1143                           fsr1h	equ	0xFE2
  1144                           fsr1l	equ	0xFE1
  1145                           fsr2h	equ	0xFDA
  1146                           fsr2l	equ	0xFD9
  1147                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     30      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_runHardverCheck
    _main->_runHardverTest
    _runHardverTest->_delay
    _runHardverCheck->_delay

Critical Paths under _ISR in COMRAM

    _ISR->i2_setOSCFrequency

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     2      5     225
                                             23 COMRAM     7     2      5
                    _runHardverCheck
                     _runHardverTest
                           _initINT0
                           _initLEDs
                    _setOSCFrequency
 ---------------------------------------------------------------------------------
 (1) _setOSCFrequency                                      3     1      2      30
                                             17 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _initLEDs                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initINT0                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _runHardverTest                                       4     4      0      90
                                             19 COMRAM     4     4      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _runHardverCheck                                      4     4      0      90
                                             19 COMRAM     4     4      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                2     2      0      30
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                 14    14      0     120
                                              3 COMRAM    14    14      0
                  i2_setOSCFrequency
 ---------------------------------------------------------------------------------
 (4) i2_setOSCFrequency                                    3     1      2     120
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _runHardverCheck
     _delay
   _runHardverTest
     _delay
   _initINT0
   _initLEDs
   _setOSCFrequency

 _ISR (ROOT)
   i2_setOSCFrequency

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1E      20       1       33.7%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       6       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20      14        0.0%
DATA                 0      0      26      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Sun Nov 17 20:05:05 2013

                        l70 00C4                          l78 0108                         l719 0270  
                       l751 02BE                         l761 00EA                         l683 021E  
                       l763 00F4                         l755 00CC                         l669 01F6  
                       l765 00FE                         l757 00D6                         l759 00E0  
                       l769 0110                         _ISR 0008                __CFG_LVP$OFF 000000  
                      ?_ISR 0001                        i2l70 014A                        i2l62 0080  
                      i2l63 006A                        i2l64 0080                        i2l78 018E  
             _freqGlobalInt 001F                        _main 0298                        fsr0h 000FEA  
                      fsr1h 000FE2                        fsr0l 000FE9                        fsr2h 000FDA  
                      fsr1l 000FE1                        fsr2l 000FD9                        pclat 000FFA  
                      prodh 000FF4                        prodl 000FF3                        start 00BA  
                     ??_ISR 0004                       ?_main 0018                       i2l801 0184  
                     i2l811 0052                       i2l805 0196                       i2l821 007C  
                     i2l813 0060                       i2l815 006A                       i2l807 0040  
                     i2l817 0076                       i2l809 004A                       i2l819 007A  
                     i2l791 0152                       i2l793 015C                       i2l795 0166  
                     i2l797 0170                       i2l799 017A                       _PORTD 000F83  
                     _TRISD 000F95                       _delay 02C4                       tablat 000FF5  
                     status 000FD8             __initialization 02E2                __end_of_main 02C4  
                    ??_main 001D    __size_of_setOSCFrequency 0086               __activetblptr 000002  
          ??_runHardverTest 0014    __size_of_runHardverCheck 0076                      ?_delay 0001  
            __CFG_WDTEN$OFF 000000            __end_of_initINT0 0308   i2setOSCFrequency@frequenc 0001  
          __end_of_initLEDs 02FC           i2_setOSCFrequency 0144          ?i2_setOSCFrequency 0001  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
             main@startFreq 001E         ??i2_setOSCFrequency 0003                  __accesstop 0060  
   __end_of__initialization 02E6             __CFG_PBADEN$OFF 000000              __pcstackCOMRAM 0001  
             __end_of_delay 02E2   __end_ofi2_setOSCFrequency 01CA           ??_setOSCFrequency 0014  
                   ??_delay 0012           ??_runHardverCheck 0014                     i2u11_40 004A  
                   i2u11_41 0048                     i2u12_40 0052                     i2u12_41 0050  
                   i2u13_40 0060                     i2u13_41 005E                   ?_initINT0 0001  
                 ?_initLEDs 0001                     __Hparam 0000                     __Lparam 0000  
       i2setOSCFrequency@ii 0003  __size_ofi2_setOSCFrequency 0086                     __pcinit 02E2  
                   __ramtop 0600                     __ptext0 0298                     __ptext1 00BE  
                   __ptext2 02F0                     __ptext3 02FC                     __ptext4 0240  
                   __ptext5 01CA                     __ptext6 02C4                     __ptext8 0144  
              __size_of_ISR 00B2                  delay@delay 0012        end_of_initialization 02E6  
                ??_initINT0 0012                  ??_initLEDs 0012       runHardverCheck@helper 0014  
             __Lmediumconst 0000     runHardverTest@helper_32 0016             _setOSCFrequency 00BE  
           _runHardverCheck 01CA        runHardverTest@helper 0014         start_initialization 02E2  
               __end_of_ISR 00BA     __size_of_runHardverTest 0058    runHardverCheck@helper_29 0016  
               __pbssCOMRAM 001F           __size_of_initINT0 000C           __size_of_initLEDs 000C  
   __end_of_setOSCFrequency 0144                   __pintcode 0008     __end_of_runHardverCheck 0240  
         setOSCFrequency@ii 0014              __size_of_delay 001E                 _INTCON2bits 000FF1  
            _runHardverTest 0240                    __Hrparam 0000            ?_setOSCFrequency 0012  
                  __Lrparam 0000            ?_runHardverCheck 0001      __end_of_runHardverTest 0298  
   setOSCFrequency@frequenc 0012                    _initINT0 02FC                    _initLEDs 02F0  
             __size_of_main 002C                    main@argc 0018                    main@argv 001A  
                _INTCONbits 000FF2             ?_runHardverTest 0001                    intlevel2 0000  
                _OSCCONbits 000FD3           __CFG_FOSC$INTIO67 000000  
